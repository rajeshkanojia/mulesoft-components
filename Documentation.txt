Module Name : Scheduler
Connector and Component used:
	Scheduler
	Object Store
	HTTP
	File
Module Description : 
	In this dummy project I am reading a json file (location : resources/sample-data/user-data.json) which contains user data like.
	{
		"name": "Quinn Jackson",
		"phone": "1-385-262-4786",
		"email": quinnjackson@yopmail.com,
		"address": "P.O. Box 779, 7458 Egestas Av.",
		"postalZip": "23W 7S7",
		"region": "Huáběi",
		"country": "Costa Rica"
	},  

 
    My scheduler fetch single object in every 2 seconds from the file and send it to http://localhost:8081/listener through HTTP Request connector. To track the index number I use Object store. At HTTP Listener connector end which is working as receiver, simply receive the payload and store it in json file with specific country name under resources/output folder.

Important takeaway :
	How scheduler works
	How to maintain state using Object store

***********************************************************************************************************************************************
Module Name : Choice Router : Dataweave
Connector and Component uses: 
	Choice Router
	Dataweave
Module Description :
	We have Sales data csv file at location resources/sample-data, application reading this file in transform message component through 
		readUrl("classpath://sample-data/sales-data.csv", "application/csv")
	Based on uri value application generating json output accordingly, uri values are:
		product-wise-sales
		total-sale-product-wise
		customer-wise-sale
		country-wise-sale

Dataweave functions used :
	groupBy
	pluck
	map
	splitBy
	filter
	readUrl
	chaining of various functions			

Important takeaway :
	How choice router works
	How to store dataweave code in seperate dwl file and link with Transform message component.

***********************************************************************************************************************************************
Module Name : Batch-job
Connector and Component uses: 
	Batch job component
	File
	Dataweave
	Object Store
Module Description :
	We have 2 csv files names
	transaction-data.csv - stores the card transaction details of a user. fields(transactionID, accountNumber, cardNumber, transactionStatus, amount, data)
	transaction-user-data.csv - stores the user details. fields(accountNumber, cardNumber, name, email, address, etc)

	In first phase I simply store the user data in Object store(we can also use database) by making cardNumber as object key.

	In second phase batch job simply iterate over payload and write the output on file(resources/output), i use transactionStaus value(success/fail) in Accept Expression to filter out the data.

	1st batch job store all the success transaction records.
	2nd batch job store all the failed transaction records.
	3rd batch job store all the error transaction records.

Dataweave functions used :
	Mule::lookup
	-- operator on Json Object
	store transform message content in dwl file.

Important takeaway :
	How to call Mule component from dataweave through Mule::lookup()
	How Object store works
	How Batch job works

